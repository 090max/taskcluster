// This source code file is AUTO-GENERATED by github.com/taskcluster/jsonschema2go

package schedulerevents

type (
	// Message that all reruns of a task has failed it is now blocking the task-graph from finishing.
	BlockedTaskGraphMessage struct {
		Status TaskGraphStatusStructure `json:"status"`

		// Unique `taskId` that is blocking this task-graph from completion.
		//
		// Syntax:     ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
		TaskId string `json:"taskId"`

		// Message version
		//
		// Possible values:
		//   * 1
		Version int `json:"version"`
	}

	// Messages as posted to `scheduler/v1/task-graph-running` informing the world that a new task-graph have been submitted.
	NewTaskGraphMessage struct {
		Status TaskGraphStatusStructure `json:"status"`

		// Message version
		//
		// Possible values:
		//   * 1
		Version int `json:"version"`
	}

	// Messages as posted to `scheduler/v1/task-graph-extended` informing the world that a task-graph have been extended.
	TaskGraphExtendedMessage struct {
		Status TaskGraphStatusStructure `json:"status"`

		// Message version
		//
		// Possible values:
		//   * 1
		Version int `json:"version"`
	}

	// Message that all tasks in a task-graph have now completed successfully and the graph is _finished_.
	TaskGraphFinishedMessage struct {
		Status TaskGraphStatusStructure `json:"status"`

		// Message version
		//
		// Possible values:
		//   * 1
		Version int `json:"version"`
	}

	// A representation of **task-graph status** as known by the scheduler, without the state of all individual tasks.
	TaskGraphStatusStructure struct {

		// Unique identifier for task-graph scheduler managing the given task-graph
		//
		// Syntax:     ^([a-zA-Z0-9-_]*)$
		// Min length: 1
		// Max length: 22
		SchedulerId string `json:"schedulerId"`

		// Task-graph state, this enum is **frozen** new values will **not** be added.
		//
		// Possible values:
		//   * "running"
		//   * "blocked"
		//   * "finished"
		State string `json:"state"`

		// Unique task-graph identifier, this is UUID encoded as [URL-safe base64](http://tools.ietf.org/html/rfc4648#section-5) and stripped of `=` padding.
		//
		// Syntax:     ^[A-Za-z0-9_-]{8}[Q-T][A-Za-z0-9_-][CGKOSWaeimquy26-][A-Za-z0-9_-]{10}[AQgw]$
		TaskGraphId string `json:"taskGraphId"`
	}
)
