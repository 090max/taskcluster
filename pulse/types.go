// This source code file is AUTO-GENERATED by github.com/taskcluster/jsonschema2go

package pulse

import (
	tcclient "github.com/taskcluster/taskcluster-client-go"
)

type (
	// Response from a request to list namespaces
	//
	// See http://schemas.taskcluster.net/pulse/v1/list-namespaces-response.json#
	ListNamespacesResponse struct {

		// A continuation token is returned if there are more results than listed
		// here. You can optionally provide the token as a query parameter to load
		// the additional results.
		//
		// See http://schemas.taskcluster.net/pulse/v1/list-namespaces-response.json#/properties/continuationToken
		ContinuationToken string `json:"continuationToken,omitempty"`

		// List of namespaces.
		//
		// See http://schemas.taskcluster.net/pulse/v1/list-namespaces-response.json#/properties/namespaces
		Namespaces []struct {

			// E-mail address that will reach people who can address problems with runaway queue length.
			// The service will send warning notifications to this address before forcibly deleting the
			// queue.
			//
			// See http://schemas.taskcluster.net/pulse/v1/list-namespaces-response.json#/properties/namespaces/items/properties/contact
			Contact string `json:"contact"`

			// Date-time at which this namespace was first claimed.
			//
			// See http://schemas.taskcluster.net/pulse/v1/list-namespaces-response.json#/properties/namespaces/items/properties/created
			Created tcclient.Time `json:"created"`

			// Date-time after which the username, and all associated queues and
			// exchanges, should be deleted.
			//
			// See http://schemas.taskcluster.net/pulse/v1/list-namespaces-response.json#/properties/namespaces/items/properties/expires
			Expires tcclient.Time `json:"expires"`

			// The namespace's name
			//
			// See http://schemas.taskcluster.net/pulse/v1/list-namespaces-response.json#/properties/namespaces/items/properties/namespace
			Namespace string `json:"namespace"`
		} `json:"namespaces"`
	}

	// Representation of the namespace
	//
	// See http://schemas.taskcluster.net/pulse/v1/namespace.json#
	Namespace1 struct {

		// E-mail address that will reach people who can address problems with runaway queue length.
		// The service will send warning notifications to this address before forcibly deleting the
		// queue.
		//
		// See http://schemas.taskcluster.net/pulse/v1/namespace.json#/properties/contact
		Contact string `json:"contact"`

		// Date-time at which this namespace was first claimed.
		//
		// See http://schemas.taskcluster.net/pulse/v1/namespace.json#/properties/created
		Created tcclient.Time `json:"created"`

		// Date-time after which the username, and all associated queues and
		// exchanges, should be deleted.
		//
		// See http://schemas.taskcluster.net/pulse/v1/namespace.json#/properties/expires
		Expires tcclient.Time `json:"expires"`

		// The namespace's name
		//
		// See http://schemas.taskcluster.net/pulse/v1/namespace.json#/properties/namespace
		Namespace string `json:"namespace"`
	}

	// Namespace creation request
	//
	// See http://schemas.taskcluster.net/pulse/v1/namespace-request.json#
	NamespaceCreationRequest struct {

		// E-mail address that will reach people who can address problems with runaway queue length.
		// The service will send warning notifications to this address before forcibly deleting the
		// queue.
		//
		// See http://schemas.taskcluster.net/pulse/v1/namespace-request.json#/properties/contact
		Contact string `json:"contact"`

		// Date-time after which the username, and all associated queues and
		// exchanges, should be deleted. This can be updated on every claim, with no
		// limit. In most cases it should be set to several days in the future.
		//
		// See http://schemas.taskcluster.net/pulse/v1/namespace-request.json#/properties/expires
		Expires tcclient.Time `json:"expires"`
	}

	// Namespace creation response
	//
	// See http://schemas.taskcluster.net/pulse/v1/namespace-response.json#
	NamespaceCreationResponse struct {

		// E-mail address that will reach people who can address problems with runaway queue length.
		// The service will send warning notifications to this address before forcibly deleting the
		// queue.
		//
		// See http://schemas.taskcluster.net/pulse/v1/namespace-response.json#/properties/contact
		Contact string `json:"contact"`

		// Date-time at which this namespace was first claimed.
		//
		// See http://schemas.taskcluster.net/pulse/v1/namespace-response.json#/properties/created
		Created tcclient.Time `json:"created,omitempty"`

		// Date-time after which the username, and all associated queues and
		// exchanges, should be deleted.
		//
		// See http://schemas.taskcluster.net/pulse/v1/namespace-response.json#/properties/expires
		Expires tcclient.Time `json:"expires,omitempty"`

		// The name of the namespace created
		//
		// See http://schemas.taskcluster.net/pulse/v1/namespace-response.json#/properties/namespace
		Namespace string `json:"namespace"`

		// The password created for authentication
		//
		// See http://schemas.taskcluster.net/pulse/v1/namespace-response.json#/properties/password
		Password string `json:"password"`

		// The caller should plan to call `claimNamespace` again at this time. The provided
		// password will become invalid a short time after this.
		//
		// See http://schemas.taskcluster.net/pulse/v1/namespace-response.json#/properties/reclaimAt
		ReclaimAt tcclient.Time `json:"reclaimAt,omitempty"`

		// The username created for authentication
		//
		// See http://schemas.taskcluster.net/pulse/v1/namespace-response.json#/properties/username
		Username string `json:"username"`
	}

	// An array of RabbitMQ exchanges containing the details of RabbitMQ exchanges
	//
	// See http://schemas.taskcluster.net/pulse/v1/exchanges-response.json#
	RabbitMQExchanges []struct {

		// See http://schemas.taskcluster.net/pulse/v1/exchanges-response.json#/items/properties/arguments
		Arguments struct {
		} `json:"arguments,omitempty"`

		// Whether or not the exchange deletes when all queues are finished using it
		//
		// See http://schemas.taskcluster.net/pulse/v1/exchanges-response.json#/items/properties/auto-delete
		AutoDelete bool `json:"auto-delete,omitempty"`

		// Whether or not the exchange survives broker restart
		//
		// See http://schemas.taskcluster.net/pulse/v1/exchanges-response.json#/items/properties/durable
		Durable bool `json:"durable,omitempty"`

		// The exchange's name
		//
		// See http://schemas.taskcluster.net/pulse/v1/exchanges-response.json#/items/properties/name
		Name string `json:"name,omitempty"`

		// The exchange's type
		//
		// See http://schemas.taskcluster.net/pulse/v1/exchanges-response.json#/items/properties/type
		Type string `json:"type,omitempty"`

		// The exchange's vhost
		//
		// See http://schemas.taskcluster.net/pulse/v1/exchanges-response.json#/items/properties/vhost
		Vhost string `json:"vhost,omitempty"`
	}

	// Rabbit overview response
	//
	// See http://schemas.taskcluster.net/pulse/v1/rabbit-overview.json#
	RabbitOverviewResponse struct {

		// The name of the cluster
		//
		// Min length: 1
		//
		// See http://schemas.taskcluster.net/pulse/v1/rabbit-overview.json#/properties/cluster_name
		Cluster_Name string `json:"cluster_name"`

		// The version of the management
		//
		// Min length: 1
		//
		// See http://schemas.taskcluster.net/pulse/v1/rabbit-overview.json#/properties/management_version
		Management_Version string `json:"management_version"`

		// The version of RabbitMQ
		//
		// Min length: 1
		//
		// See http://schemas.taskcluster.net/pulse/v1/rabbit-overview.json#/properties/rabbitmq_version
		Rabbitmq_Version string `json:"rabbitmq_version"`
	}
)
