// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import Client from '../Client';

export default class WorkerManager extends Client {
  constructor(options = {}) {
    super({
      serviceName: 'worker-manager',
      serviceVersion: 'v1',
      exchangePrefix: '',
      ...options,
    });
    this.ping.entry = {"args":[],"method":"get","name":"ping","query":[],"route":"/ping","stability":"stable","type":"function"}; // eslint-disable-line
    this.createWorkerConfiguration.entry = {"args":["workerConfigurationId"],"input":true,"method":"put","name":"createWorkerConfiguration","query":[],"route":"/worker-configurations/<workerConfigurationId>","scopes":"worker-manager:manage-worker-configuration:<workerConfigurationId>","stability":"experimental","type":"function"}; // eslint-disable-line
    this.updateWorkerConfiguration.entry = {"args":["workerConfigurationId"],"input":true,"method":"post","name":"updateWorkerConfiguration","query":[],"route":"/worker-configurations/<workerConfigurationId>","scopes":"worker-manager:manage-worker-configuration:<workerConfigurationId>","stability":"experimental","type":"function"}; // eslint-disable-line
    this.getWorkerConfiguration.entry = {"args":["workerConfigurationId"],"method":"get","name":"getWorkerConfiguration","output":true,"query":[],"route":"/worker-configurations/<workerConfigurationId>","stability":"experimental","type":"function"}; // eslint-disable-line
    this.removeWorkerConfiguration.entry = {"args":["workerConfigurationId"],"method":"delete","name":"removeWorkerConfiguration","query":[],"route":"/worker-configurations/<workerConfigurationId>","stability":"experimental","type":"function"}; // eslint-disable-line
    this.listWorkerConfigurations.entry = {"args":[],"method":"get","name":"listWorkerConfigurations","query":[],"route":"/worker-configurations","stability":"experimental","type":"function"}; // eslint-disable-line
    this.testWorkerConfiguration.entry = {"args":[],"input":true,"method":"post","name":"testWorkerConfiguration","output":true,"query":[],"route":"/worker-configuration","stability":"experimental","type":"function"}; // eslint-disable-line
    this.evaluateWorkerConfiguration.entry = {"args":["workerConfigurationId"],"input":true,"method":"post","name":"evaluateWorkerConfiguration","output":true,"query":[],"route":"/worker-configurations/<workerConfigurationId>/evaluate","stability":"experimental","type":"function"}; // eslint-disable-line
  }
  /* eslint-disable max-len */
  // Respond without doing anything.
  // This endpoint is used to check that the service is up.
  /* eslint-enable max-len */
  ping(...args) {
    this.validate(this.ping.entry, args);

    return this.request(this.ping.entry, args);
  }
  /* eslint-disable max-len */
  // Create a worker configuration
  /* eslint-enable max-len */
  createWorkerConfiguration(...args) {
    this.validate(this.createWorkerConfiguration.entry, args);

    return this.request(this.createWorkerConfiguration.entry, args);
  }
  /* eslint-disable max-len */
  // Update a worker configuration
  /* eslint-enable max-len */
  updateWorkerConfiguration(...args) {
    this.validate(this.updateWorkerConfiguration.entry, args);

    return this.request(this.updateWorkerConfiguration.entry, args);
  }
  /* eslint-disable max-len */
  // Get a worker configuration
  /* eslint-enable max-len */
  getWorkerConfiguration(...args) {
    this.validate(this.getWorkerConfiguration.entry, args);

    return this.request(this.getWorkerConfiguration.entry, args);
  }
  /* eslint-disable max-len */
  // Get a worker configuration
  /* eslint-enable max-len */
  removeWorkerConfiguration(...args) {
    this.validate(this.removeWorkerConfiguration.entry, args);

    return this.request(this.removeWorkerConfiguration.entry, args);
  }
  /* eslint-disable max-len */
  // Retrieve a worker configuration as a set of rules
  /* eslint-enable max-len */
  listWorkerConfigurations(...args) {
    this.validate(this.listWorkerConfigurations.entry, args);

    return this.request(this.listWorkerConfigurations.entry, args);
  }
  /* eslint-disable max-len */
  // Evaluate a worker configuration against a set of satisfiers
  /* eslint-enable max-len */
  testWorkerConfiguration(...args) {
    this.validate(this.testWorkerConfiguration.entry, args);

    return this.request(this.testWorkerConfiguration.entry, args);
  }
  /* eslint-disable max-len */
  // Preview the currently stored worker configurations evaluation result against
  // the provided satisfiers
  /* eslint-enable max-len */
  evaluateWorkerConfiguration(...args) {
    this.validate(this.evaluateWorkerConfiguration.entry, args);

    return this.request(this.evaluateWorkerConfiguration.entry, args);
  }
}
