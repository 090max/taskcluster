{
  "id": "http://schemas.taskcluster.net/generic-worker/v1/payload.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Generic worker payload",
  "description": "This schema defines the structure of the `payload` property referred to in a Task Cluster Task definition.",
  "type": "object",
  "required": [
    "command",
    "maxRunTime"
  ],
  "properties": {
    "command": {
      "title": "Command to run.",
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "string"
      },
      "description": "Example: `['/bin/bash', '-c', 'build.sh']`."
    },
    "encryptedEnv": {
      "title": "List of encrypted environment variable mappings.",
      "description": "List of base64 encoded asymmetric encrypted environment variables. See http://docs.taskcluster.net/docker-worker/#encrypted-environment-variables",
      "type": "array",
      "items": {
        "title": "Base64 encoded encrypted environment variable object.",
        "type": "string"
      }
    },
    "env": {
      "title": "Environment variable mappings.",
      "description": "Example: ```\n{\n  \"PATH\": '/borked/path' \n  \"ENV_NAME\": \"VALUE\" \n}\n```",
      "type": "object"
    },
    "maxRunTime": {
      "type": "number",
      "title": "Maximum run time in seconds",
      "description": "Maximum time the task container can run in seconds",
      "multipleOf": 1.0,
      "minimum": 1,
      "maximum": 86400
    },
    "graphs": {
      "type": "array",
      "title": "Paths (in the container) to a json files which are used to extend the task graph",
      "description": "Contents of file are used to extend the graph (if this task was part of a graph). See http://docs.taskcluster.net/scheduler/api-docs/#extendTaskGraph",
      "items": {
        "title": "Individual path to graph extension point.",
        "type": "string"
      }
    },
    "artifacts": {
        "type": "object",
        "title": "Artifact map (name -> source)",
        "description": "Artifact upload map example: ```{ \"hosts\": \"/etc/hosts\" }```",
        "additionalProperties": {
        "type": "object",
        "properties": {
          "type": {
            "title": "Artifact upload type.",
            "type": "string",
            "enum": [
              "file",
              "directory"
            ]
          },
          "path": {
            "title": "Location of artifact on filesystem.",
            "type": "string"
          },
          "expires": {
            "title": "Date when artifact should expire; must be in the future.",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "type",
          "path",
          "expires"
        ]
      }
    },
    "features": {
      "title": "Feature flags",
      "description": "Used to enable additional functionality.",
      "type": "object",
      "properties": {
        "localLiveLog": {
          "type": "boolean",
          "title": "Enable live logging (worker local)",
          "description": "Logs are stored on the worker during the duration of tasks and available via http chunked streaming then uploaded to s3"
        },
        "azureLiveLog": {
          "type": "boolean",
          "title": "Enable live logging (via azure blobs)",
          "description": "Useful for situations where it is impossible to reach the worker and parsing the azure livelog is possible"
        },
        "bulkLog": {
          "type": "boolean",
          "title": "Bulk upload the task log into a single artifact",
          "description": "Useful if live logging is not interesting but the overalllog is later on"
        },
        "taskclusterProxy": {
          "type": "boolean",
          "title": "Task cluster auth proxy service",
          "description": "The auth proxy allows making requests to taskcluster/queue and taskcluster/scheduler directly from your task with the same scopes as set in the task. This can be used to make api calls via the [client](https://github.com/taskcluster/taskcluster-client) CURL, etc... Without embedding credentials in the task."
        },
        "artifacts": {
          "type": "boolean",
          "title": "Artifact uploads",
          "description": ""
        },
        "extendTaskGraph": {
          "type": "boolean",
          "title": "Task graph extensions",
          "description": "The `.graphs` property in payload allows specifying paths which if present will be used to extend the task graph (Keeping it alive) this can be used for dynamic tests, bisections, any dynamic tasks, etc..."
        }
      }
    }
  }
}
