apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: ${project_name}
spec:
  selector:
    matchLabels:
      application: taskcluster
      taskcluster-service: ${project_name}
      taskcluster-proc:
        $if: 'proc_name != "0"'
        then: '${proc_name}'
        else: 'static'
  replicas: {$eval: number(replicas)}
  template:
    metadata:
      annotations:
        secrets_hash: ${secrets_hash}
      labels:
        application: taskcluster
        taskcluster-service: ${project_name}
        taskcluster-proc:
          $if: 'proc_name != "0"'
          then: '${proc_name}'
          else: 'static'
    spec:
      serviceAccountName: ${project_name}
      containers:
      - name: ${project_name}
        image: ${docker_image}
        imagePullPolicy: Always
        args:
          $if: 'proc_name != "0"'
          then: ['${proc_name}']
        resources:
          requests:
            cpu: ${cpu}
            memory: ${memory}
        env:
          $flatten:
            - name: PORT
              value: '80'
            - name: TASKCLUSTER_ROOT_URL
              value: ${root_url}
            - $map: {$eval: 'secret_keys'}
              each(k):
                name: '${k}'
                valueFrom:
                  secretKeyRef:
                    name: '${secret_name}'
                    key: '${k}'
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: ${readiness_path}
            port: 80
          timeoutSeconds: 5
          periodSeconds: 10
          initialDelaySeconds: 3
