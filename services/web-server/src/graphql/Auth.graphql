enum AuthProvider {
  MOZILLA_AUTH0
  GITHUB_OAUTH2
}

# A response containing credentials corresponding to a supplied OIDC `access_token`.
type TaskclusterCredentials {
  clientId: ID!
  accessToken: ID!
  certificate: String
}

type OidcCredentials {
  # Time after which the credentials are no longer valid.
  # Callers should call `oidcCredentials` again to get fresh
  # credentials before this time.
  expires: Date!
  # Taskcluster credentials. Note that the credentials may not contain a certificate!
  credentials: TaskclusterCredentials!
}

extend type Query {
  # Given an OIDC `access_token` from a trusted OpenID provider, return a
  # set of Taskcluster credentials for use on behalf of the identified
  # user.
  #
  # This method is typically not called with a Taskcluster client library
  # and does not accept Hawk credentials. The `access_token` should be
  # given in an `Authorization` header:
  # ```
  # Authorization: Bearer abc.xyz
  # ```
  #
  # The `access_token` is first verified against the named
  # :provider, then passed to the provider\'s APIBuilder to retrieve a user
  # profile. That profile is then used to generate Taskcluster credentials
  # appropriate to the user. Note that the resulting credentials may or may
  # not include a `certificate` property. Callers should be prepared for either
  # alternative.
  #
  # The given credentials will expire in a relatively short time. Callers should
  # monitor this expiration and refresh the credentials if necessary, by calling
  # this endpoint again, if they have expired.
  oidcCredentials(provider: AuthProvider!): OidcCredentials
}
