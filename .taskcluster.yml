version: 1
policy:
  pullRequests: public
tasks:
  - $if: '(tasks_for == "github-pull-request"  && event["action"] in ["opened", "reopened", "synchronize"])'
    then:
      taskId: {$eval: as_slugid("test")}
      created: {$fromNow: ''}
      deadline: {$fromNow: '2 hours'}
      provisionerId: proj-taskcluster
      workerType: ci
      payload:
        maxRunTime: 3600
        image: golang:1.12.6
        command:
          - /bin/bash
          - '-c'
          - >-
            git clone ${event.pull_request.head.repo.git_url} taskcluster-worker-runner &&
            cd taskcluster-worker-runner &&
            git config advice.detachedHead false &&
            git checkout ${event.pull_request.head.sha} &&
            go test -v -race ./... &&
            go run util/update-readme.go &&
            if ! output=$(git status --porcelain) || [ -n "$output" ]; then
              echo "*** 'go run util/update-readme.go' produced changes to the repository; these changes should be checked in ***";
              git --no-pager diff;
              exit 1;
            fi
      metadata:
        name: taskcluster-worker-runner-tests
        description: runs tests for taskcluster-worker-runner components
        owner: taskcluster-internal@mozilla.com
        source: ${event.repository.url}

  - $if: '(tasks_for == "github-pull-request"  && event["action"] in ["opened", "reopened", "synchronize"])'
    then:
      taskId: {$eval: as_slugid("lint")}
      created: {$fromNow: ''}
      deadline: {$fromNow: '2 hours'}
      provisionerId: proj-taskcluster
      workerType: ci
      payload:
        maxRunTime: 3600
        image: golang:1.12.6
        command:
          - /bin/bash
          - '-c'
          - >-
            curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $GOPATH/bin v1.17.1 &&
            git clone ${event.pull_request.head.repo.git_url} taskcluster-worker-runner &&
            cd taskcluster-worker-runner &&
            git config advice.detachedHead false &&
            git checkout ${event.pull_request.head.sha} &&
            golangci-lint run
      metadata:
        name: taskcluster-worker-runner-lint
        description: check lint for taskcluster-worker-runner
        owner: taskcluster-internal@mozilla.com
        source: ${event.repository.url}

  - $if: '(tasks_for == "github-pull-request"  && event["action"] in ["opened", "reopened", "synchronize"])'
    then:
      taskId: {$eval: as_slugid("windows-tests")}
      created: {$fromNow: ''}
      deadline: {$fromNow: '2 hours'}
      provisionerId: proj-taskcluster
      workerType: windows2012r2-amd64-ci
      metadata:
        name: taskcluster-worker-runner-windows
        description: windows tests for taskcluster-worker-runner
        owner: taskcluster-internal@mozilla.com
        source: ${event.repository.url}
      payload:
        maxRunTime: 3600
        command:
          - set CGO_ENABLED=0
          - set GOPATH=%CD%\gopath1.12.6
          - set GOROOT=%CD%\go1.12.6\go
          - set PATH=%CD%\git\cmd;%GOPATH%\bin;%GOROOT%\bin;%PATH%
          - git config --global core.autocrlf false
          - go version
          - go env
          - git clone ${event.pull_request.head.repo.git_url} taskcluster-worker-runner
          - cd taskcluster-worker-runner
          - git config advice.detachedHead false
          - git checkout ${event.pull_request.head.sha}
          - go test -v ./...
        mounts:
          - content:
              url: https://storage.googleapis.com/golang/go1.12.6.windows-amd64.zip
              sha256: 9badf7bbc0ed55f2db967434b033a2cddf2e46dbdc5bb8560d8fde019e8e19d3
            directory: go1.12.6
            format: zip
          - content:
              url: https://github.com/git-for-windows/git/releases/download/v2.14.1.windows.1/MinGit-2.14.1-64-bit.zip
              sha256: 65c12e4959b8874187b68ec37e532fe7fc526e10f6f0f29e699fa1d2449e7d92
            directory: git
            format: zip

  - $if: 'tasks_for == "github-push"'
    then:
      taskId: {$eval: as_slugid("all")}
      created: {$fromNow: ''}
      deadline: {$fromNow: '2 hours'}
      provisionerId: proj-taskcluster
      workerType: ci
      payload:
        maxRunTime: 3600
        image: golang:1.12.6
        command:
          - /bin/bash
          - '-c'
          - >-
            curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $GOPATH/bin v1.17.1 &&
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh &&
            git clone ${event.repository.url} taskcluster-worker-runner &&
            cd taskcluster-worker-runner &&
            git config advice.detachedHead false &&
            git checkout ${event.after} &&
            golangci-lint run &&
            go test -v -race ./...
      metadata:
        name: taskcluster-worker-runner-everything
        description: all checks for taskcluster-worker-runner
        owner: taskcluster-internal@mozilla.com
        source: ${event.repository.url}
