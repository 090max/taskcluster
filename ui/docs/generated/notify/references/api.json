{
  "$schema": "/schemas/common/api-reference-v0.json#",
  "title": "Notification Service",
  "description": "The notification service listens for tasks with associated notifications\nand handles requests to send emails and post pulse messages.",
  "serviceName": "notify",
  "apiVersion": "v1",
  "entries": [
    {
      "type": "function",
      "method": "get",
      "route": "/ping",
      "query": [],
      "args": [],
      "name": "ping",
      "stability": "stable",
      "title": "Ping Server",
      "description": "Respond without doing anything.\nThis endpoint is used to check that the service is up."
    },
    {
      "type": "function",
      "method": "post",
      "route": "/email",
      "query": [],
      "args": [],
      "name": "email",
      "stability": "experimental",
      "title": "Send an Email",
      "input": "v1/email-request.json#",
      "description": "Send an email to `address`. The content is markdown and will be rendered\nto HTML, but both the HTML and raw markdown text will be sent in the\nemail. If a link is included, it will be rendered to a nice button in the\nHTML version of the email",
      "scopes": "notify:email:<address>"
    },
    {
      "type": "function",
      "method": "post",
      "route": "/pulse",
      "query": [],
      "args": [],
      "name": "pulse",
      "stability": "experimental",
      "title": "Publish a Pulse Message",
      "input": "v1/pulse-request.json#",
      "description": "Publish a message on pulse with the given `routingKey`.",
      "scopes": "notify:pulse:<routingKey>"
    },
    {
      "type": "function",
      "method": "post",
      "route": "/irc",
      "query": [],
      "args": [],
      "name": "irc",
      "stability": "experimental",
      "title": "Post IRC Message",
      "input": "v1/irc-request.json#",
      "description": "Post a message on IRC to a specific channel or user, or a specific user\non a specific channel.\n\nSuccess of this API method does not imply the message was successfully\nposted. This API method merely inserts the IRC message into a queue\nthat will be processed by a background process.\nThis allows us to re-send the message in face of connection issues.\n\nHowever, if the user isn't online the message will be dropped without\nerror. We maybe improve this behavior in the future. For now just keep\nin mind that IRC is a best-effort service.",
      "scopes": {
        "if": "channelRequest",
        "then": "notify:irc-channel:<channel>",
        "else": "notify:irc-user:<user>"
      }
    },
    {
      "type": "function",
      "method": "post",
      "route": "/denylist/add",
      "query": [],
      "args": [],
      "name": "addDenylistAddress",
      "stability": "experimental",
      "title": "Denylist Given Address",
      "input": "v1/notification-address.json#",
      "description": "Add the given address to the notification denylist. The address\ncan be of either of the three supported address type namely pulse, email\nor IRC(user or channel). Addresses in the denylist will be ignored\nby the notification service.",
      "scopes": "notify:manage-denylist:<notificationType>/<notificationAddress>"
    },
    {
      "type": "function",
      "method": "delete",
      "route": "/denylist/delete",
      "query": [],
      "args": [],
      "name": "deleteDenylistAddress",
      "stability": "experimental",
      "title": "Delete Denylisted Address",
      "input": "v1/notification-address.json#",
      "description": "Delete the specified address from the notification denylist.",
      "scopes": "notify:manage-denylist:<notificationType>/<notificationAddress>"
    },
    {
      "type": "function",
      "method": "get",
      "route": "/denylist/list",
      "query": [
        "continuationToken",
        "limit"
      ],
      "args": [],
      "name": "list",
      "stability": "experimental",
      "title": "List Denylisted Notifications",
      "output": "v1/notification-address-list.json#",
      "description": "Lists all the denylisted addresses.\n\nBy default this end-point will try to return up to 1000 addresses in one\nrequest. But it **may return less**, even if more tasks are available.\nIt may also return a `continuationToken` even though there are no more\nresults. However, you can only be sure to have seen all results if you\nkeep calling `list` with the last `continuationToken` until you\nget a result without a `continuationToken`.\n\nIf you are not interested in listing all the members at once, you may\nuse the query-string option `limit` to return fewer."
    }
  ]
}